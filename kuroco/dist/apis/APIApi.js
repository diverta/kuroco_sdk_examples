/* tslint:disable */
/* eslint-disable */
/**
 * Picol API
 * Alpha testing of new RCMS API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
/**
 * no description
 */
export class APIApi extends runtime.BaseAPI {
    /**
     */
    async rcmsApiOpenapiDataGet(requestParameters) {
        const rcmsApiOpenapiDataGetRaw = async (requestParameters) => {
            if (requestParameters === null || requestParameters === undefined) {
                throw new runtime.RequiredError('request parameter was null or undefined', [
                    'request parameter was null or undefined when calling rcmsApiOpenapiDataGet.',
                    'This method requires parameters even if defined parameters are all optional (not required).',
                    'In case of that, please specify empty Object.',
                    'e.g. rcmsApiOpenapiDataGet({})'
                ].join('\n'));
            }
            if (requestParameters.apiId === null || requestParameters.apiId === undefined) {
                throw new runtime.RequiredError('apiId', 'Required parameter requestParameters.apiId was null or undefined when calling rcmsApiOpenapiDataGet.');
            }
            const queryParameters = {};
            if (requestParameters.outputFormat !== undefined) {
                queryParameters['_output_format'] = requestParameters.outputFormat;
            }
            if (requestParameters.lang !== undefined) {
                queryParameters['_lang'] = requestParameters.lang;
            }
            if (requestParameters.apiId !== undefined) {
                queryParameters['api_id'] = requestParameters.apiId;
            }
            const headerParameters = {};
            const response = await this.request({
                path: `/rcms-api/openapi_data`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        };
        return await rcmsApiOpenapiDataGetRaw(requestParameters);
    }
}
//# sourceMappingURL=APIApi.js.map