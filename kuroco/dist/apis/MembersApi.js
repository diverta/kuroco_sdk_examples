/* tslint:disable */
/* eslint-disable */
/**
 * Picol API
 * Alpha testing of new RCMS API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { InlineObject2ToJSON, } from '../models';
/**
 * no description
 */
export class MembersApi extends runtime.BaseAPI {
    /**
     *  ## Controller parameters  > **unuse_columns** `email`  > **mode_for_mail_auth** `UPDATE_MAIL`
     */
    async rcmsApiMemberUpdatePost(requestParameters) {
        const rcmsApiMemberUpdatePostRaw = async (requestParameters) => {
            if (requestParameters === null || requestParameters === undefined) {
                throw new runtime.RequiredError('request parameter was null or undefined', [
                    'request parameter was null or undefined when calling rcmsApiMemberUpdatePost.',
                    'This method requires parameters even if defined parameters are all optional (not required).',
                    'In case of that, please specify empty Object.',
                    'e.g. rcmsApiMemberUpdatePost({})'
                ].join('\n'));
            }
            if (requestParameters.inlineObject2 === null || requestParameters.inlineObject2 === undefined) {
                throw new runtime.RequiredError('inlineObject2', 'Required parameter requestParameters.inlineObject2 was null or undefined when calling rcmsApiMemberUpdatePost.');
            }
            const queryParameters = {};
            if (requestParameters.outputFormat !== undefined) {
                queryParameters['_output_format'] = requestParameters.outputFormat;
            }
            if (requestParameters.lang !== undefined) {
                queryParameters['_lang'] = requestParameters.lang;
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = await this.request({
                path: `/rcms-api/member/update`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: InlineObject2ToJSON(requestParameters.inlineObject2),
            });
            return new runtime.JSONApiResponse(response);
        };
        return await rcmsApiMemberUpdatePostRaw(requestParameters);
    }
    /**
     *  ## Controller parameters  > **subData_flg** `1`
     */
    async rcmsApiMembersGet(requestParameters) {
        const rcmsApiMembersGetRaw = async (requestParameters) => {
            if (requestParameters === null || requestParameters === undefined) {
                throw new runtime.RequiredError('request parameter was null or undefined', [
                    'request parameter was null or undefined when calling rcmsApiMembersGet.',
                    'This method requires parameters even if defined parameters are all optional (not required).',
                    'In case of that, please specify empty Object.',
                    'e.g. rcmsApiMembersGet({})'
                ].join('\n'));
            }
            const queryParameters = {};
            if (requestParameters.outputFormat !== undefined) {
                queryParameters['_output_format'] = requestParameters.outputFormat;
            }
            if (requestParameters.lang !== undefined) {
                queryParameters['_lang'] = requestParameters.lang;
            }
            if (requestParameters.id) {
                queryParameters['id[]'] = requestParameters.id;
            }
            if (requestParameters.cnt !== undefined) {
                queryParameters['cnt'] = requestParameters.cnt;
            }
            if (requestParameters.pageID !== undefined) {
                queryParameters['pageID'] = requestParameters.pageID;
            }
            if (requestParameters.sName !== undefined) {
                queryParameters['s_name'] = requestParameters.sName;
            }
            if (requestParameters.sEmail !== undefined) {
                queryParameters['s_email'] = requestParameters.sEmail;
            }
            if (requestParameters.sTel !== undefined) {
                queryParameters['s_tel'] = requestParameters.sTel;
            }
            if (requestParameters.sAddress !== undefined) {
                queryParameters['s_address'] = requestParameters.sAddress;
            }
            if (requestParameters.sTdfkCd !== undefined) {
                queryParameters['s_tdfk_cd'] = requestParameters.sTdfkCd;
            }
            if (requestParameters.groupId !== undefined) {
                queryParameters['group_id'] = requestParameters.groupId;
            }
            const headerParameters = {};
            const response = await this.request({
                path: `/rcms-api/members`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        };
        return await rcmsApiMembersGetRaw(requestParameters);
    }
    /**
     *  ## Controller parameters  > **group_id** `1`
     */
    async rcmsApiMembersMemberIdGet(requestParameters) {
        const rcmsApiMembersMemberIdGetRaw = async (requestParameters) => {
            if (requestParameters === null || requestParameters === undefined) {
                throw new runtime.RequiredError('request parameter was null or undefined', [
                    'request parameter was null or undefined when calling rcmsApiMembersMemberIdGet.',
                    'This method requires parameters even if defined parameters are all optional (not required).',
                    'In case of that, please specify empty Object.',
                    'e.g. rcmsApiMembersMemberIdGet({})'
                ].join('\n'));
            }
            if (requestParameters.memberId === null || requestParameters.memberId === undefined) {
                throw new runtime.RequiredError('memberId', 'Required parameter requestParameters.memberId was null or undefined when calling rcmsApiMembersMemberIdGet.');
            }
            const queryParameters = {};
            if (requestParameters.outputFormat !== undefined) {
                queryParameters['_output_format'] = requestParameters.outputFormat;
            }
            if (requestParameters.lang !== undefined) {
                queryParameters['_lang'] = requestParameters.lang;
            }
            const headerParameters = {};
            const response = await this.request({
                path: `/rcms-api/members/{member_id}`.replace(`{${"member_id"}}`, encodeURIComponent(String(requestParameters.memberId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            });
            return new runtime.JSONApiResponse(response);
        };
        return await rcmsApiMembersMemberIdGetRaw(requestParameters);
    }
}
//# sourceMappingURL=MembersApi.js.map