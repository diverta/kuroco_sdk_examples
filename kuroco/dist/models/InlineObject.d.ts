/**
 * Picol API
 * Alpha testing of new RCMS API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface InlineObject
 */
export interface InlineObject {
    /**
     * Topic title
     * @type {string}
     * @memberof InlineObject
     */
    subject: string;
    /**
     * Date
     * @type {Date}
     * @memberof InlineObject
     */
    ymd: Date;
    /**
     * Opening to the public and closed-door
     * @type {string}
     * @memberof InlineObject
     */
    openType?: InlineObjectOpenTypeEnum;
    /**
     * Display all topics to logged in members, regardless ther public/hidden status
     * @type {number}
     * @memberof InlineObject
     */
    topicsFlg?: InlineObjectTopicsFlgEnum;
    /**
     * Season
     * @type {number}
     * @memberof InlineObject
     */
    season?: number;
    /**
     * Contents
     * @type {string}
     * @memberof InlineObject
     */
    contents?: string;
    /**
     * display up
     * @type {number}
     * @memberof InlineObject
     */
    regularFlg?: number;
    /**
     * Display method
     * @type {number}
     * @memberof InlineObject
     */
    linkFlg?: number;
    /**
     * Link
     * @type {string}
     * @memberof InlineObject
     */
    linkUrl?: string;
    /**
     * Category ID * 1 => カテゴリー① * 4 => カテゴリー②
     * @type {number}
     * @memberof InlineObject
     */
    contentsType: InlineObjectContentsTypeEnum;
    /**
     * タグID * 75 => 推しキャラ(Favorite character) * 76 => いい感じの何か(good stuff) * 77 => new_tag * 78 => test * 79 => aaa * 80 => うおお * 81 => ohoh * 82 => uooo test * 83 => waooo * 84 => asd * 85 => sdad * 86 => asdasd * 87 => saS * 88 => testing * 89 => 213 * 90 => 321 * 91 => 123 * 92 => 231 * 93 => ihasd * 94 => 231313 * 95 => oiu9012 * 96 => 8asdkjha * 97 => 2123 * 98 => 8236211 * 99 => 213123123 * 100 => asdadasd * 101 => asd81 * 102 => asdad121 * 103 => sdasdasd * 104 => 213123 * 105 => 12312312 * 106 => sd1213 * 107 => 781h * 108 => sda * 109 => 61hs * 110 => tesainsdf * 111 => tens * 112 => teai123 * 113 => tesy * 114 => 21ad * 115 => tesribg * 116 => asdsad * 117 => s2113 * 118 => sadsada * 119 => asdad * 120 => tesintg * 121 => esdfdf * 122 => eseres * 123 => xzcxcz * 124 => hoo * 125 => ttt * 126 => add_test * 127 => test_20191118 * 128 => test_kameya * 129 => test___aa * 130 => testing 123 * 131 => testaaaA * 132 => add * 133 => aaaa * 134 => eeeeee * 135 => you * 136 => wow * 67 => 近況(Now) * 68 => ランチ(Lunch) * 69 => おやつ(Snack) * 70 => 仕事風景(Work) * 71 => ただしい(Do right) * 72 => たのしい(Delight) * 73 => ジレンマ(dilemma) * 74 => めでたい
     * @type {Array<number>}
     * @memberof InlineObject
     */
    tagId?: Array<InlineObjectTagIdEnum>;
    /**
     * 写真
     * @type {Array<object>}
     * @memberof InlineObject
     */
    extCol01?: Array<object>;
    /**
     * 動画
     * @type {object}
     * @memberof InlineObject
     */
    extCol06?: object;
    /**
     * コメント
     * @type {string}
     * @memberof InlineObject
     */
    extCol02?: string;
    /**
     * 投稿者所属
     * @type {string}
     * @memberof InlineObject
     */
    extCol05?: string;
    /**
     * 投稿者名
     * @type {string}
     * @memberof InlineObject
     */
    extCol04?: string;
    /**
     * URL
     * @type {string}
     * @memberof InlineObject
     */
    extCol03?: string;
}
export declare function InlineObjectFromJSON(json: any): InlineObject;
export declare function InlineObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject;
export declare function InlineObjectToJSON(value?: InlineObject | null): any;
/**
* @export
* @enum {string}
*/
export declare enum InlineObjectOpenTypeEnum {
    Open = "open",
    Close = "close",
    Default = "default"
}
/**
* @export
* @enum {string}
*/
export declare enum InlineObjectTopicsFlgEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export declare enum InlineObjectContentsTypeEnum {
    NUMBER_1 = 1,
    NUMBER_4 = 4
}
/**
* @export
* @enum {string}
*/
export declare enum InlineObjectTagIdEnum {
    NUMBER_75 = 75,
    NUMBER_76 = 76,
    NUMBER_77 = 77,
    NUMBER_78 = 78,
    NUMBER_79 = 79,
    NUMBER_80 = 80,
    NUMBER_81 = 81,
    NUMBER_82 = 82,
    NUMBER_83 = 83,
    NUMBER_84 = 84,
    NUMBER_85 = 85,
    NUMBER_86 = 86,
    NUMBER_87 = 87,
    NUMBER_88 = 88,
    NUMBER_89 = 89,
    NUMBER_90 = 90,
    NUMBER_91 = 91,
    NUMBER_92 = 92,
    NUMBER_93 = 93,
    NUMBER_94 = 94,
    NUMBER_95 = 95,
    NUMBER_96 = 96,
    NUMBER_97 = 97,
    NUMBER_98 = 98,
    NUMBER_99 = 99,
    NUMBER_100 = 100,
    NUMBER_101 = 101,
    NUMBER_102 = 102,
    NUMBER_103 = 103,
    NUMBER_104 = 104,
    NUMBER_105 = 105,
    NUMBER_106 = 106,
    NUMBER_107 = 107,
    NUMBER_108 = 108,
    NUMBER_109 = 109,
    NUMBER_110 = 110,
    NUMBER_111 = 111,
    NUMBER_112 = 112,
    NUMBER_113 = 113,
    NUMBER_114 = 114,
    NUMBER_115 = 115,
    NUMBER_116 = 116,
    NUMBER_117 = 117,
    NUMBER_118 = 118,
    NUMBER_119 = 119,
    NUMBER_120 = 120,
    NUMBER_121 = 121,
    NUMBER_122 = 122,
    NUMBER_123 = 123,
    NUMBER_124 = 124,
    NUMBER_125 = 125,
    NUMBER_126 = 126,
    NUMBER_127 = 127,
    NUMBER_128 = 128,
    NUMBER_129 = 129,
    NUMBER_130 = 130,
    NUMBER_131 = 131,
    NUMBER_132 = 132,
    NUMBER_133 = 133,
    NUMBER_134 = 134,
    NUMBER_135 = 135,
    NUMBER_136 = 136,
    NUMBER_67 = 67,
    NUMBER_68 = 68,
    NUMBER_69 = 69,
    NUMBER_70 = 70,
    NUMBER_71 = 71,
    NUMBER_72 = 72,
    NUMBER_73 = 73,
    NUMBER_74 = 74
}
//# sourceMappingURL=InlineObject.d.ts.map